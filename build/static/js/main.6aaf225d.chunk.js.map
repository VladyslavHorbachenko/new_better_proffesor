{"version":3,"sources":["utils/axiosWithAuth.js","components /RegisterForm.js","components /LoginForm.js","components /LoginPage.js","components /AddStudent.js","components /AddStudentComponent.js","components /RegisterPage.js","components /StudentList.js","App.js","serviceWorker.js","index.js"],"names":["axiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","Authorization","StyledForm","styled","form","RegisterForm","useState","name","email","password","formData","setFormData","changeHandler","event","target","value","console","log","onSubmit","preventDefault","post","then","res","data","catch","err","response","htmlFor","id","type","placeholder","onChange","required","LoginForm","props","input","setInput","handleChange","setItem","history","window","location","href","className","to","LoginPage","AddStudent","newStudent","setNewStudent","onChangeHandler","e","AddStudentComponent","RegisterPage","StudentList","student","setStudent","useEffect","get","students","map","item","App","style","textAlign","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6aaf225d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n    const token = localStorage.getItem('token');\n\n    return axios.create({\n        baseURL: 'https://betterprofessorapp.herokuapp.com',\n        headers: {\n            Authorization: token\n        }\n    })\n}","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport {axiosWithAuth} from \"../utils/axiosWithAuth\";\n\n\nexport const StyledForm = styled.form`\nwidth: 50%;\nheight: 70vh;\nmargin: auto 300px;\npadding: 32px;\nfont-weight: bold;\nbackground-color: #F8F9F7;\ncolor: #223F68;\nbox-shadow: 0 0 10px 5px lightgray;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-evenly;\ninput {\n    margin-bottom: 28px;\n    padding: 0.5rem;\n    font-size: 16px;\n    width: 96%;\n    display: block;\n    color: #223F68;\n}\nlabel {\n    display: flex;\n    text-align: start;\n    justify-content: end;\n    \n}\nbutton {\n  max-width: 100%;\n  width: 250px;\n  margin: 20px 0;\n  padding: 12px 20px;\n  border-style: none;\n  background-color: #457B9D;\n  box-shadow: 0px 2px 2px lightgray;\n  font-size: 25px;\n  font-weight: 500;\n  color: #F8F9F7;\n  cursor: pointer;\n  outline: none;\n  -webkit-appearance: none;\n  display: flex;\n  align-self: center;\n}\n`;\nconst RegisterForm = () => {\n    // gets data from form\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n    });\n    // stores real time change in the form input\n    const changeHandler = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value });\n        console.log(event.target.value);\n    };\n\n    // sends form data to state via the state function passed down\n    const submitForm = event => {\n        event.preventDefault();\n        // setFormData({ name: \"\", email: \"\",password: \"\"});\n        axios.post('https://betterprofessorapp.herokuapp.com/api/auth/register', formData)\n            .then(res => console.log(res.data) )\n            .catch(err => console.log(err.response));\n    }\n\n    return (\n        <StyledForm onSubmit={submitForm}>\n            <label htmlFor=\"name\">Username</label>\n            <input\n                name=\"name\"\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"name...\"\n                onChange={changeHandler}\n                value={formData.name}\n                required/>\n            <label htmlFor=\"email\">Email</label>\n            <input\n                name=\"email\"\n                id=\"email\"\n                type=\"text\"\n                placeholder=\"email\"\n                onChange={changeHandler}\n                value={formData.email}\n                required/>\n            <label htmlFor=\"password\">Password</label>\n            <input\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"new password...\"\n                onChange={changeHandler}\n                value={formData.password}\n                required/>\n            <button type=\"submit\" >Register</button>\n        </StyledForm>\n    );\n};\n\nexport default RegisterForm;","import React,{useState} from \"react\";\nimport {Link} from 'react-router-dom'\nimport {axiosWithAuth} from \"../utils/axiosWithAuth\";\nimport axios from 'axios'\nimport {StyledForm} from \"./RegisterForm\";\nimport {Redirect, useHistory} from \"react-router\";\n\nconst LoginForm = (props) => {\n    const [input,setInput] = useState({\n        email:'',\n        password:''\n    })\n\n    const handleChange = (event) => {\n        setInput({\n            ...input,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const switchRoute = () => {\n        return  <Redirect to=\"/student-list\" />\n    }\n\n    const login = (event) => {\n\n        event.preventDefault();\n\n        // const { push } = useHistory();\n\n        axios\n            .post('https://betterprofessorapp.herokuapp.com/api/auth/login',input)\n            .then(res => {\n                console.log(res);\n                localStorage.setItem('token', res.data.token);\n                localStorage.setItem('name', res.data.name);\n                console.log(props.history);\n                window.location.href = '/student-add'\n                switchRoute();\n\n                // props.history.push('/student-list');\n                // useHistory.push('student-list');\n\n\n            })\n            // .catch(err => console.log(err) ? alert(\"Success\") : alert(\"Check Input\"))\n            .catch(err => console.log(err))\n\n    }\n\n    return(\n        <div>\n            <StyledForm>\n            <form onSubmit={login}>\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                    type= 'text'\n                    value={input.email}\n                    name='email'\n                    placeholder='...enter username'\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"name\">Password</label>\n                <input\n                    type='password'\n                    value={input.password}\n                    name='password'\n                    placeholder='...enter password'\n                    onChange={handleChange}\n                />\n                <button className=\"login-button\">LOG IN</button>\n\n                <div className=\"create-acct\">\n                    <Link className=\"acct-link\" to=\"/register\">Create an Account</Link>\n                </div>\n            </form>\n            </StyledForm>\n        </div>\n    )\n}\n\nexport default LoginForm","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\n\nfunction LoginPage() {\n    return(\n        <div>\n            Login Page\n            <LoginForm/>\n        </div>\n    )\n\n}\nexport default LoginPage","import React, {useState} from \"react\";\nimport {axiosWithAuth} from \"../utils/axiosWithAuth\";\nimport {StyledForm} from \"./RegisterForm\";\n\n\nfunction AddStudent() {\n    const [newStudent, setNewStudent] = useState({\n        name: '',\n        email: ''\n    })\n\n    const onChangeHandler = e => {\n        const { name, value } = e.target;\n        setNewStudent({...newStudent, [name]: value})\n    }\n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n\n        axiosWithAuth()\n            .post('/api/students', newStudent)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    return (\n        <div>\n            <StyledForm onSubmit={onSubmitHandler} >\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type='text'\n                        name='name'\n                        required\n                        value={newStudent.name}\n                        onChange={onChangeHandler}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"name\">Email:</label>\n                    <input\n                        type='email'\n                        name='email'\n                        value={newStudent.email}\n                        onChange={onChangeHandler}\n                    />\n                </div>\n                <button>Submit</button>\n            </StyledForm>\n        </div>\n    );\n}\n\nexport default AddStudent;","import React from \"react\";\nimport AddStudent from \"./AddStudent\";\nfunction AddStudentComponent() {\n    return(\n        <div>\n            Student List\n            <AddStudent/>\n        </div>\n    )\n}\n\nexport default AddStudentComponent","import React from \"react\";\nimport RegisterForm from \"./RegisterForm\";\n\nfunction RegisterPage() {\n    return(\n        <div>\n\n            <RegisterForm/>\n        </div>\n    )\n}\n\nexport default RegisterPage","import React, {useState,useEffect} from \"react\";\nimport {axiosWithAuth} from \"../utils/axiosWithAuth\";\n\n\nfunction StudentList() {\n\n    const[student,setStudent] = useState([])\n\n    useEffect(() => {\n        axiosWithAuth()\n            .get(\"/api/students\")\n            .then(res => {\n                console.log(res)\n                setStudent(res.data.students)\n            })\n            .catch(err => console.log(err))\n    },[])\n        return(\n            <div>Student List\n                {student.map(item => (\n                    <li>{item.name} {item.email}</li>\n                ))}\n            </div>\n\n        )\n}\n\nexport default StudentList","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport './App.css';\nimport LoginPage from \"./components /LoginPage\";\nimport AddStudentComponent from \"./components /AddStudentComponent\";\nimport RegisterPage from \"./components /RegisterPage\";\nimport StudentList from \"./components /StudentList\";\n// import history from \"./components /history\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <div style={{textAlign: 'center'}}>\n          <ul>\n\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n              <Link to=\"/student-add\">Add student</Link>\n            </li>\n            <li>\n              <Link to=\"/student-list\">Student List</Link>\n            </li>\n          </ul>\n\n          <Switch>\n            <Route exact path=\"/student-add\" component={AddStudentComponent} />\n            <Route exact path=\"/\" component={LoginPage}/>\n            <Route exact path=\"/register\" component={RegisterPage}/>\n            <Route exact path=\"/student-list\" component={StudentList}/>\n            <Route component={LoginPage} />\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n        <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}